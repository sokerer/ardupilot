#!nsh

# APM startup script for NuttX on VRBRAIN

# check for an old file called APM, caused by 
# a bug in an earlier firmware release
if [ -f /fs/microsd/APM ]
then
    echo "[APM] APM file found - renaming"
    mv /fs/microsd/APM /fs/microsd/APM.old
fi

if [ -f /fs/microsd/APM/nostart ]
then
    echo "[APM] APM/nostart found - skipping APM startup"
    sh /etc/init.d/rc.error
fi

# mount binfs so we can find the built-in apps
if [ -f /bin/reboot ]
then
    echo "[APM] binfs already mounted"
else
    echo "[APM] Mounting binfs"
    if mount -t binfs /dev/null /bin
    then
        echo "[APM] binfs mounted OK"
    else
        sh /etc/init.d/rc.error
    fi
fi

if [ -f /fs/microsd/APM/boot.log ]
then
    if rm /fs/microsd/APM/boot.log
    then
        echo "[APM] Removed old boot.log"
    fi
fi
set logfile /fs/microsd/APM/BOOT.LOG

if [ ! -f /bin/ArduPilot ]
then
   echo "[APM] /bin/ArduPilot not found"
   sh /etc/init.d/rc.error
fi

if mkdir /fs/microsd/APM > /dev/null
then
     echo "[APM] Created APM directory"
fi

echo "[APM] Verifying board"

set BOARD NO_BRAIN_BOARD
set INTERNAL_MPU6000 false
set INTERNAL_MPU9250 false
set EXTERNAL_EXP false
set EXTERNAL_IMU false
set INTERNAL_MAG false
set LL_I2C_AUX false
set LL_PWM_INPUT false

if [ -f /bin/VRBRAIN_V45 ]
then
    echo "[APM] Detected VRBrain 4.5 board"
    set BOARD VRBRAIN_V45
    set INTERNAL_MPU6000 true
    set INTERNAL_MAG true
fi
if [ -f /bin/VRBRAIN_V45P ]
then
    echo "[APM] Detected VRBrain 4.5 PWM version board"
    set BOARD VRBRAIN_V45P
    set INTERNAL_MPU6000 true
    set INTERNAL_MAG true
fi
if [ -f /bin/VRBRAIN_V51 ]
then
    echo "[APM] Detected VRBrain 5.1 board"
    set BOARD VRBRAIN_V51
    set INTERNAL_MPU6000 true
    set INTERNAL_MAG true
    set LL_PWM_INPUT true
fi
if [ -f /bin/VRBRAIN_V51P ]
then
     echo "[APM] Detected VRBrain 5.1 PWM version board"
     set BOARD VRBRAIN_V51P
    set INTERNAL_MPU6000 true
    set INTERNAL_MAG true
fi
if [ -f /bin/VRBRAIN_V51PRO ]
then
    echo "[APM] Detected VRBrain 5.1 Professional board"
    set BOARD VRBRAIN_V51PRO
    set INTERNAL_MPU6000 true
    set EXTERNAL_EXP true
    set EXTERNAL_IMU true
    set LL_PWM_INPUT true
fi
if [ -f /bin/VRBRAIN_V51PROP ]
then
    echo "[APM] Detected VRBrain 5.1 Professional PWM version board"
    set BOARD VRBRAIN_V51PROP
    set INTERNAL_MPU6000 true
    set EXTERNAL_EXP true
    set EXTERNAL_IMU true
fi
if [ -f /bin/VRBRAIN_V52 ]
then
    echo "[APM] Detected VRBrain 5.2 board"
    set BOARD VRBRAIN_V52
    set INTERNAL_MPU6000 true
    set INTERNAL_MAG true
    set LL_I2C_AUX true
    set LL_PWM_INPUT true
fi
if [ -f /bin/VRBRAIN_V52P ]
then
    echo "[APM] Detected VRBrain 5.2 PWM version board"
    set BOARD VRBRAIN_V52P
    set INTERNAL_MPU6000 true
    set INTERNAL_MAG true
    set LL_I2C_AUX true
fi
if [ -f /bin/VRBRAIN_V52PRO ]
then
    echo "[APM] Detected VRBrain 5.2 Professional board"
    set BOARD VRBRAIN_V52PRO
    set INTERNAL_MPU6000 true
    set EXTERNAL_EXP true
    set EXTERNAL_IMU true
    set LL_I2C_AUX true
    set LL_PWM_INPUT true
fi
if [ -f /bin/VRBRAIN_V52PROP ]
then
    echo "[APM] Detected VRBrain 5.2 Professional PWM version board"
    set BOARD VRBRAIN_V52PROP
    set INTERNAL_MPU6000 true
    set EXTERNAL_EXP true
    set EXTERNAL_IMU true
    set LL_I2C_AUX true
fi
if [ -f /bin/VRBRAIN_V53 ]
then
    echo "[APM] Detected VRBrain 5.3 board"
    set BOARD VRBRAIN_V53
    set INTERNAL_MPU6000 true
    set LL_I2C_AUX true
fi
if [ -f /bin/VRBRAIN_V53PRO ]
then
    echo "[APM] Detected VRBrain 5.3 Professional board"
    set BOARD VRBRAIN_V53PRO
    set INTERNAL_MPU6000 true
    set EXTERNAL_EXP true
    set EXTERNAL_IMU true
    set LL_I2C_AUX true
fi
if [ -f /bin/VRUBRAIN_V51 ]
then
    echo "[APM] Detected VR Micro Brain 5.1 board"
    set BOARD VRUBRAIN_V51
    set INTERNAL_MPU6000 true
    set LL_PWM_INPUT true
fi
if [ -f /bin/VRUBRAIN_V51P ]
then
    echo "[APM] Detected VR Micro Brain 5.1 PWM version board"
    set INTERNAL_MPU6000 true
    set BOARD VRUBRAIN_V51P
fi
if [ -f /bin/VRUBRAIN_V52 ]
then
    echo "[APM] Detected VR Micro Brain 5.2 board"
    set INTERNAL_MPU6000 true
    set BOARD VRUBRAIN_V52
fi
if [ -f /bin/VRCORE_V10 ]
then
    echo "[APM] Detected VRCore 1.0 board"
    set BOARD VRCORE_V10
    set INTERNAL_MPU9250 true
    set LL_I2C_AUX true
    set LL_PWM_INPUT true
fi
if [ -f /bin/VRCORE_V10P ]
then
    echo "[APM] Detected VRCore 1.0 PWM version board"
    set BOARD VRCORE_V10P
    set INTERNAL_MPU9250 true
    set LL_I2C_AUX true
fi

if [ $BOARD == NO_BRAIN_BOARD ]
then
   echo "[APM] No VR board found"
   sh /etc/init.d/rc.error
fi

echo "[APM] Starting UORB"
if uorb start
then
    echo "[APM] UORB started OK"
else
    sh /etc/init.d/rc.error
fi

echo "[APM] Starting ADC"
if adc start
then
    echo "[APM] ADC started OK"
else
    sh /etc/init.d/rc.error
fi

echo "[APM] Starting APM sensors"

echo "[APM] Starting MS5611 Internal"
if ms5611 -I start
then
    echo "[APM] MS5611 onboard started OK"
else
    echo "[APM] MS5611 onboard start failed"
    sh /etc/init.d/rc.error
fi

if [ $EXTERNAL_EXP == true ]
then
    echo "[APM] Starting MS5611 External EXP"
    if ms5611 -X start
    then
        echo "[APM] MS5611 external EXP started OK"
    else
        echo "[APM] MS5611 external EXP start failed"
#        sh /etc/init.d/rc.error
    fi
fi
if [ $EXTERNAL_IMU == true ]
then
    echo "[APM] Starting MS5611 External IMU"
    if ms5611 -U start
    then
        echo "[APM] MS5611 external IMU started OK"
    else
        echo "[APM] MS5611 external IMU start failed"
#        sh /etc/init.d/rc.error
    fi
fi

echo "[APM] Starting HMC5883 External GPS"
if hmc5883 -X start
then
    echo "[APM] HMC5883 External GPS started OK"
    if hmc5883 -X calibrate
    then
      echo "[APM] HMC5883 External GPS calibrate OK"
    else 
      echo "[APM] HMC5883 External GPS calibrate failed"
    fi
else
    echo "[APM] HMC5883 External GPS start failed"
#    sh /etc/init.d/rc.error
fi

if [ $INTERNAL_MAG == true ]
then
    echo "[APM] Starting HMC5883 Internal"
    if hmc5883 -I start
    then
        echo "[APM] HMC5883 Internal started OK"
        if hmc5883 -I calibrate
        then
          echo "[APM] HMC5883 Internal calibrate OK"
        else 
          echo "[APM] HMC5883 Internal calibrate failed"
        fi
    else
        echo "[APM] HMC5883 Internal start failed"
#        sh /etc/init.d/rc.error
    fi
fi

if [ $EXTERNAL_EXP == true ]
then
    echo "[APM] Starting HMC5883 External EXP"
    if hmc5883 -x start
    then
        echo "[APM] HMC5883 external EXP started OK"
        if hmc5883 -x calibrate
        then
            echo "[APM] HMC5883 external EXP calibrate OK"
        else 
            echo "[APM] HMC5883 external EXP calibrate failed"
        fi
    else
        echo "[APM] HMC5983 external EXP start failed"
#       sh /etc/init.d/rc.error
    fi
fi

if [ $EXTERNAL_IMU == true ]
then
    echo "[APM] Starting HMC5883 External IMU"
    if hmc5883 -u start
    then
        echo "[APM] HMC5883 external IMU started OK"
        if hmc5883 -u calibrate
        then
          echo "[APM] HMC5883 external IMU calibrate OK"
        else 
          echo "[APM] HMC5883 external IMU calibrate failed"
        fi
    else
        echo "[APM] HMC5983 external IMU start failed"
#        sh /etc/init.d/rc.error
    fi
fi

if [ $INTERNAL_MPU6000 == true ]
then
    echo "[APM] Starting MPU6000 Internal"
    if mpu6000 -I start
    then
        echo "[APM] MPU6000 onboard started OK"
    else
        echo "[APM] MPU6000 onboard start failed"
        sh /etc/init.d/rc.error
    fi
fi

if [ $INTERNAL_MPU9250 == true ]
then
    echo "[APM] Starting MPU9250 Internal"
    if mpu9250 -I start
    then
        echo "[APM] MPU9250 onboard started OK"
    else
        echo "[APM] MPU9250 onboard start failed"
        sh /etc/init.d/rc.error
    fi
fi

if [ $EXTERNAL_EXP == true ]
then
    echo "[APM] Starting MPU6000 External EXP"
    if mpu6000 -X start
    then
        echo "[APM] MPU6000 external EXP started OK"
    else
        echo "[APM] MPU6000 external EXP start failed"
#        sh /etc/init.d/rc.error
    fi
fi

if [ $EXTERNAL_IMU == true ]
then
    echo "[APM] Starting MPU6000 External IMU"
    if mpu6000 -U start
    then
        echo "[APM] MPU6000 external IMU started OK"
    else
        echo "[APM] MPU6000 external IMU start failed"
#        sh /etc/init.d/rc.error
    fi
fi

# optional ETS airspeed sensor
if ets_airspeed start
then
    echo "[APM] Found ETS airspeed sensor"
fi

if meas_airspeed start
then
    echo "[APM] Found MEAS airspeed sensor"
fi

# optional Range Finder sensor
if ll40ls -X start
then
    echo "[APM] Found external ll40ls sensor"
fi

if [ $LL_I2C_AUX == true ]
then
    if ll40ls -I start
    then
        echo "[APM] Found internal ll40ls sensor"
    fi
fi

if [ $LL_PWM_INPUT == true ]
then
    # optional PWM input driver
    if pwm_input start
    then
        echo "[APM] started pwm_input driver"
        if ll40ls start pwm
        then
            echo "[APM] Found ll40ls sensor PWM"
        fi
    fi
fi

if trone start
then
    echo "[APM] Found trone sensor"
fi

if mb12xx start
then
    echo "[APM] Found mb12xx sensor"
fi

# [APM] Starting Optional PX4Flow sensor
if px4flow start
then
    echo "[APM] Found PX4Flow sensor"
fi

echo "[APM] Starting MTD driver"
if mtd start /fs/mtd
then
    echo "[APM] MTD driver started OK"
else
    echo "[APM] MTD driver start failed"
    sh /etc/init.d/rc.error           
fi

echo "[APM] MTD driver read test"
if mtd readtest /fs/mtd
then
    echo "[APM] MTD driver readtest OK"
else
    echo "[APM] MTD driver failed to read"
    sh /etc/init.d/rc.error           
fi

echo "[APM] Starting VROUTPUT driver"
vroutput mode_pwm
#if vroutput mode_pwm
#then
#    echo "[APM] VROUTPUT driver started OK"
#else
#    echo "[APM] VROUTPUT driver start failed"
#    sh /etc/init.d/rc.error           
#fi

echo "[APM] Starting VRINPUT driver"
vrinput start
#if vrinput start
#then
#    echo "[APM] VRINPUT driver started OK"
#else
#    echo "[APM] VRINPUT driver start failed"
#    sh /etc/init.d/rc.error           
#fi

set sketch NONE
set deviceA /dev/ttyACM0
set deviceC /dev/ttyS2

echo "[APM] Starting ArduPilot"
#if ArduPilot -d $deviceA -d2 $deviceC start
if ArduPilot start
then
    echo "[APM] ArduPilot started OK"
else
    echo "[APM] ArduPilot start failed"
    sh /etc/init.d/rc.error
fi

echo "[APM] Exiting from nsh shell"
exit

echo "[APM] Script finished"

